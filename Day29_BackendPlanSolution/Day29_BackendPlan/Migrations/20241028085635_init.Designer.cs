// <auto-generated />
using System;
using Day29_BackendPlan.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Day29_BackendPlan.Migrations
{
    [DbContext(typeof(InsuranceContext))]
    [Migration("20241028085635_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Day29_BackendPlan.Model.ClaimReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"), 1L, 1);

                    b.Property<string>("AddressProof")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancelledCheck")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeathCertificate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Others")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyCertificate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PolicyHolderId")
                        .HasColumnType("int");

                    b.Property<string>("SettlementForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReportId");

                    b.HasIndex("PolicyHolderId");

                    b.ToTable("ClaimReports");
                });

            modelBuilder.Entity("Day29_BackendPlan.Model.Policy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyId"), 1L, 1);

                    b.Property<string>("PolicyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PolicyValue")
                        .HasColumnType("float");

                    b.HasKey("PolicyId");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("Day29_BackendPlan.Model.PolicyHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("PolicyHolders");
                });

            modelBuilder.Entity("Day29_BackendPlan.Model.PolicyItem", b =>
                {
                    b.Property<int>("SNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SNo"), 1L, 1);

                    b.Property<int>("PolicyHolderId")
                        .HasColumnType("int");

                    b.Property<int>("PolicyId")
                        .HasColumnType("int");

                    b.HasKey("SNo");

                    b.HasIndex("PolicyHolderId");

                    b.HasIndex("PolicyId");

                    b.ToTable("PolicyItems");
                });

            modelBuilder.Entity("Day29_BackendPlan.Model.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("HashKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Day29_BackendPlan.Model.ClaimReport", b =>
                {
                    b.HasOne("Day29_BackendPlan.Model.PolicyHolder", "PolicyHolder")
                        .WithMany("ClaimReport")
                        .HasForeignKey("PolicyHolderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ClaimReport_PolicyHolder");

                    b.Navigation("PolicyHolder");
                });

            modelBuilder.Entity("Day29_BackendPlan.Model.PolicyHolder", b =>
                {
                    b.HasOne("Day29_BackendPlan.Model.User", "User")
                        .WithOne("PolicyHolder")
                        .HasForeignKey("Day29_BackendPlan.Model.PolicyHolder", "Username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("Fk_PolicyHolder_user");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Day29_BackendPlan.Model.PolicyItem", b =>
                {
                    b.HasOne("Day29_BackendPlan.Model.PolicyHolder", "PolicyHolder")
                        .WithMany("Items")
                        .HasForeignKey("PolicyHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Day29_BackendPlan.Model.Policy", "Policy")
                        .WithMany("Items")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Policy");

                    b.Navigation("PolicyHolder");
                });

            modelBuilder.Entity("Day29_BackendPlan.Model.Policy", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Day29_BackendPlan.Model.PolicyHolder", b =>
                {
                    b.Navigation("ClaimReport");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Day29_BackendPlan.Model.User", b =>
                {
                    b.Navigation("PolicyHolder")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
